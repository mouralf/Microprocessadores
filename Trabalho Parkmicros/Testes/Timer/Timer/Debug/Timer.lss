
Timer.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000003ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000035a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000003ae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000003e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000028  00000000  00000000  00000420  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000072a  00000000  00000000  00000448  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000682  00000000  00000000  00000b72  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000024b  00000000  00000000  000011f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000003c  00000000  00000000  00001440  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a6  00000000  00000000  0000147c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000050  00000000  00000000  00001822  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001872  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 5c 00 	call	0xb8	; 0xb8 <main>
  78:	0c 94 ab 01 	jmp	0x356	; 0x356 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <atraso>:
 */ 

#include <avr/io.h>
#include <math.h>

void atraso(float tempo_ms){
  80:	cf 93       	push	r28
	TCCR0A = 0x2;		//modo CTC para o timer 0
  82:	c2 e0       	ldi	r28, 0x02	; 2
  84:	c4 bd       	out	0x24, r28	; 36
	TCCR0B = 0x5;		//PRESCALER de 1024
  86:	25 e0       	ldi	r18, 0x05	; 5
  88:	25 bd       	out	0x25, r18	; 37
	TCNT0 = 0;			//Zera timer
  8a:	16 bc       	out	0x26, r1	; 38
	
	unsigned char n_contagem = round(tempo_ms/64*1000);
  8c:	20 e0       	ldi	r18, 0x00	; 0
  8e:	30 e0       	ldi	r19, 0x00	; 0
  90:	40 e8       	ldi	r20, 0x80	; 128
  92:	5c e3       	ldi	r21, 0x3C	; 60
  94:	0e 94 c9 00 	call	0x192	; 0x192 <__mulsf3>
  98:	20 e0       	ldi	r18, 0x00	; 0
  9a:	30 e0       	ldi	r19, 0x00	; 0
  9c:	4a e7       	ldi	r20, 0x7A	; 122
  9e:	54 e4       	ldi	r21, 0x44	; 68
  a0:	0e 94 c9 00 	call	0x192	; 0x192 <__mulsf3>
  a4:	0e 94 36 01 	call	0x26c	; 0x26c <round>
  a8:	0e 94 71 00 	call	0xe2	; 0xe2 <__fixunssfsi>
	OCR0A = n_contagem;			//Valor de comparação 3 contagens (1,66 ms)
  ac:	67 bd       	out	0x27, r22	; 39
	
	TIFR0 = (1 << 1); //limpa flag de comparacao A
  ae:	c5 bb       	out	0x15, r28	; 21
	while((TIFR0 & (1 << 1)) == 0);
  b0:	a9 9b       	sbis	0x15, 1	; 21
  b2:	fe cf       	rjmp	.-4      	; 0xb0 <atraso+0x30>
}
  b4:	cf 91       	pop	r28
  b6:	08 95       	ret

000000b8 <main>:

int main(void)
{
	
	//LED no pino PB5
	DDRB = (1 << 5);	//pino PB5 é saída (LED)
  b8:	80 e2       	ldi	r24, 0x20	; 32
  ba:	84 b9       	out	0x04, r24	; 4
	
    float delay_ms = 2;
	/* Replace with your application code */
    while (1) 
    {
		PORTB |= (1 << 5);	//Ativa LED
  bc:	85 b1       	in	r24, 0x05	; 5
  be:	80 62       	ori	r24, 0x20	; 32
  c0:	85 b9       	out	0x05, r24	; 5
		atraso(delay_ms);
  c2:	60 e0       	ldi	r22, 0x00	; 0
  c4:	70 e0       	ldi	r23, 0x00	; 0
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	90 e4       	ldi	r25, 0x40	; 64
  ca:	0e 94 40 00 	call	0x80	; 0x80 <atraso>
		PORTB &= ~(1 << 5);	//apaga LED
  ce:	85 b1       	in	r24, 0x05	; 5
  d0:	8f 7d       	andi	r24, 0xDF	; 223
  d2:	85 b9       	out	0x05, r24	; 5
		atraso(delay_ms);
  d4:	60 e0       	ldi	r22, 0x00	; 0
  d6:	70 e0       	ldi	r23, 0x00	; 0
  d8:	80 e0       	ldi	r24, 0x00	; 0
  da:	90 e4       	ldi	r25, 0x40	; 64
  dc:	0e 94 40 00 	call	0x80	; 0x80 <atraso>
  e0:	ed cf       	rjmp	.-38     	; 0xbc <main+0x4>

000000e2 <__fixunssfsi>:
  e2:	0e 94 a8 00 	call	0x150	; 0x150 <__fp_splitA>
  e6:	88 f0       	brcs	.+34     	; 0x10a <__fixunssfsi+0x28>
  e8:	9f 57       	subi	r25, 0x7F	; 127
  ea:	98 f0       	brcs	.+38     	; 0x112 <__fixunssfsi+0x30>
  ec:	b9 2f       	mov	r27, r25
  ee:	99 27       	eor	r25, r25
  f0:	b7 51       	subi	r27, 0x17	; 23
  f2:	b0 f0       	brcs	.+44     	; 0x120 <__fixunssfsi+0x3e>
  f4:	e1 f0       	breq	.+56     	; 0x12e <__fixunssfsi+0x4c>
  f6:	66 0f       	add	r22, r22
  f8:	77 1f       	adc	r23, r23
  fa:	88 1f       	adc	r24, r24
  fc:	99 1f       	adc	r25, r25
  fe:	1a f0       	brmi	.+6      	; 0x106 <__fixunssfsi+0x24>
 100:	ba 95       	dec	r27
 102:	c9 f7       	brne	.-14     	; 0xf6 <__fixunssfsi+0x14>
 104:	14 c0       	rjmp	.+40     	; 0x12e <__fixunssfsi+0x4c>
 106:	b1 30       	cpi	r27, 0x01	; 1
 108:	91 f0       	breq	.+36     	; 0x12e <__fixunssfsi+0x4c>
 10a:	0e 94 c2 00 	call	0x184	; 0x184 <__fp_zero>
 10e:	b1 e0       	ldi	r27, 0x01	; 1
 110:	08 95       	ret
 112:	0c 94 c2 00 	jmp	0x184	; 0x184 <__fp_zero>
 116:	67 2f       	mov	r22, r23
 118:	78 2f       	mov	r23, r24
 11a:	88 27       	eor	r24, r24
 11c:	b8 5f       	subi	r27, 0xF8	; 248
 11e:	39 f0       	breq	.+14     	; 0x12e <__fixunssfsi+0x4c>
 120:	b9 3f       	cpi	r27, 0xF9	; 249
 122:	cc f3       	brlt	.-14     	; 0x116 <__fixunssfsi+0x34>
 124:	86 95       	lsr	r24
 126:	77 95       	ror	r23
 128:	67 95       	ror	r22
 12a:	b3 95       	inc	r27
 12c:	d9 f7       	brne	.-10     	; 0x124 <__fixunssfsi+0x42>
 12e:	3e f4       	brtc	.+14     	; 0x13e <__fixunssfsi+0x5c>
 130:	90 95       	com	r25
 132:	80 95       	com	r24
 134:	70 95       	com	r23
 136:	61 95       	neg	r22
 138:	7f 4f       	sbci	r23, 0xFF	; 255
 13a:	8f 4f       	sbci	r24, 0xFF	; 255
 13c:	9f 4f       	sbci	r25, 0xFF	; 255
 13e:	08 95       	ret

00000140 <__fp_split3>:
 140:	57 fd       	sbrc	r21, 7
 142:	90 58       	subi	r25, 0x80	; 128
 144:	44 0f       	add	r20, r20
 146:	55 1f       	adc	r21, r21
 148:	59 f0       	breq	.+22     	; 0x160 <__fp_splitA+0x10>
 14a:	5f 3f       	cpi	r21, 0xFF	; 255
 14c:	71 f0       	breq	.+28     	; 0x16a <__fp_splitA+0x1a>
 14e:	47 95       	ror	r20

00000150 <__fp_splitA>:
 150:	88 0f       	add	r24, r24
 152:	97 fb       	bst	r25, 7
 154:	99 1f       	adc	r25, r25
 156:	61 f0       	breq	.+24     	; 0x170 <__fp_splitA+0x20>
 158:	9f 3f       	cpi	r25, 0xFF	; 255
 15a:	79 f0       	breq	.+30     	; 0x17a <__fp_splitA+0x2a>
 15c:	87 95       	ror	r24
 15e:	08 95       	ret
 160:	12 16       	cp	r1, r18
 162:	13 06       	cpc	r1, r19
 164:	14 06       	cpc	r1, r20
 166:	55 1f       	adc	r21, r21
 168:	f2 cf       	rjmp	.-28     	; 0x14e <__fp_split3+0xe>
 16a:	46 95       	lsr	r20
 16c:	f1 df       	rcall	.-30     	; 0x150 <__fp_splitA>
 16e:	08 c0       	rjmp	.+16     	; 0x180 <__fp_splitA+0x30>
 170:	16 16       	cp	r1, r22
 172:	17 06       	cpc	r1, r23
 174:	18 06       	cpc	r1, r24
 176:	99 1f       	adc	r25, r25
 178:	f1 cf       	rjmp	.-30     	; 0x15c <__fp_splitA+0xc>
 17a:	86 95       	lsr	r24
 17c:	71 05       	cpc	r23, r1
 17e:	61 05       	cpc	r22, r1
 180:	08 94       	sec
 182:	08 95       	ret

00000184 <__fp_zero>:
 184:	e8 94       	clt

00000186 <__fp_szero>:
 186:	bb 27       	eor	r27, r27
 188:	66 27       	eor	r22, r22
 18a:	77 27       	eor	r23, r23
 18c:	cb 01       	movw	r24, r22
 18e:	97 f9       	bld	r25, 7
 190:	08 95       	ret

00000192 <__mulsf3>:
 192:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <__mulsf3x>
 196:	0c 94 9a 01 	jmp	0x334	; 0x334 <__fp_round>
 19a:	0e 94 8c 01 	call	0x318	; 0x318 <__fp_pscA>
 19e:	38 f0       	brcs	.+14     	; 0x1ae <__mulsf3+0x1c>
 1a0:	0e 94 93 01 	call	0x326	; 0x326 <__fp_pscB>
 1a4:	20 f0       	brcs	.+8      	; 0x1ae <__mulsf3+0x1c>
 1a6:	95 23       	and	r25, r21
 1a8:	11 f0       	breq	.+4      	; 0x1ae <__mulsf3+0x1c>
 1aa:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__fp_inf>
 1ae:	0c 94 89 01 	jmp	0x312	; 0x312 <__fp_nan>
 1b2:	11 24       	eor	r1, r1
 1b4:	0c 94 c3 00 	jmp	0x186	; 0x186 <__fp_szero>

000001b8 <__mulsf3x>:
 1b8:	0e 94 a0 00 	call	0x140	; 0x140 <__fp_split3>
 1bc:	70 f3       	brcs	.-36     	; 0x19a <__mulsf3+0x8>

000001be <__mulsf3_pse>:
 1be:	95 9f       	mul	r25, r21
 1c0:	c1 f3       	breq	.-16     	; 0x1b2 <__mulsf3+0x20>
 1c2:	95 0f       	add	r25, r21
 1c4:	50 e0       	ldi	r21, 0x00	; 0
 1c6:	55 1f       	adc	r21, r21
 1c8:	62 9f       	mul	r22, r18
 1ca:	f0 01       	movw	r30, r0
 1cc:	72 9f       	mul	r23, r18
 1ce:	bb 27       	eor	r27, r27
 1d0:	f0 0d       	add	r31, r0
 1d2:	b1 1d       	adc	r27, r1
 1d4:	63 9f       	mul	r22, r19
 1d6:	aa 27       	eor	r26, r26
 1d8:	f0 0d       	add	r31, r0
 1da:	b1 1d       	adc	r27, r1
 1dc:	aa 1f       	adc	r26, r26
 1de:	64 9f       	mul	r22, r20
 1e0:	66 27       	eor	r22, r22
 1e2:	b0 0d       	add	r27, r0
 1e4:	a1 1d       	adc	r26, r1
 1e6:	66 1f       	adc	r22, r22
 1e8:	82 9f       	mul	r24, r18
 1ea:	22 27       	eor	r18, r18
 1ec:	b0 0d       	add	r27, r0
 1ee:	a1 1d       	adc	r26, r1
 1f0:	62 1f       	adc	r22, r18
 1f2:	73 9f       	mul	r23, r19
 1f4:	b0 0d       	add	r27, r0
 1f6:	a1 1d       	adc	r26, r1
 1f8:	62 1f       	adc	r22, r18
 1fa:	83 9f       	mul	r24, r19
 1fc:	a0 0d       	add	r26, r0
 1fe:	61 1d       	adc	r22, r1
 200:	22 1f       	adc	r18, r18
 202:	74 9f       	mul	r23, r20
 204:	33 27       	eor	r19, r19
 206:	a0 0d       	add	r26, r0
 208:	61 1d       	adc	r22, r1
 20a:	23 1f       	adc	r18, r19
 20c:	84 9f       	mul	r24, r20
 20e:	60 0d       	add	r22, r0
 210:	21 1d       	adc	r18, r1
 212:	82 2f       	mov	r24, r18
 214:	76 2f       	mov	r23, r22
 216:	6a 2f       	mov	r22, r26
 218:	11 24       	eor	r1, r1
 21a:	9f 57       	subi	r25, 0x7F	; 127
 21c:	50 40       	sbci	r21, 0x00	; 0
 21e:	9a f0       	brmi	.+38     	; 0x246 <__mulsf3_pse+0x88>
 220:	f1 f0       	breq	.+60     	; 0x25e <__mulsf3_pse+0xa0>
 222:	88 23       	and	r24, r24
 224:	4a f0       	brmi	.+18     	; 0x238 <__mulsf3_pse+0x7a>
 226:	ee 0f       	add	r30, r30
 228:	ff 1f       	adc	r31, r31
 22a:	bb 1f       	adc	r27, r27
 22c:	66 1f       	adc	r22, r22
 22e:	77 1f       	adc	r23, r23
 230:	88 1f       	adc	r24, r24
 232:	91 50       	subi	r25, 0x01	; 1
 234:	50 40       	sbci	r21, 0x00	; 0
 236:	a9 f7       	brne	.-22     	; 0x222 <__mulsf3_pse+0x64>
 238:	9e 3f       	cpi	r25, 0xFE	; 254
 23a:	51 05       	cpc	r21, r1
 23c:	80 f0       	brcs	.+32     	; 0x25e <__mulsf3_pse+0xa0>
 23e:	0c 94 5a 01 	jmp	0x2b4	; 0x2b4 <__fp_inf>
 242:	0c 94 c3 00 	jmp	0x186	; 0x186 <__fp_szero>
 246:	5f 3f       	cpi	r21, 0xFF	; 255
 248:	e4 f3       	brlt	.-8      	; 0x242 <__mulsf3_pse+0x84>
 24a:	98 3e       	cpi	r25, 0xE8	; 232
 24c:	d4 f3       	brlt	.-12     	; 0x242 <__mulsf3_pse+0x84>
 24e:	86 95       	lsr	r24
 250:	77 95       	ror	r23
 252:	67 95       	ror	r22
 254:	b7 95       	ror	r27
 256:	f7 95       	ror	r31
 258:	e7 95       	ror	r30
 25a:	9f 5f       	subi	r25, 0xFF	; 255
 25c:	c1 f7       	brne	.-16     	; 0x24e <__mulsf3_pse+0x90>
 25e:	fe 2b       	or	r31, r30
 260:	88 0f       	add	r24, r24
 262:	91 1d       	adc	r25, r1
 264:	96 95       	lsr	r25
 266:	87 95       	ror	r24
 268:	97 f9       	bld	r25, 7
 26a:	08 95       	ret

0000026c <round>:
 26c:	0e 94 a8 00 	call	0x150	; 0x150 <__fp_splitA>
 270:	e8 f0       	brcs	.+58     	; 0x2ac <round+0x40>
 272:	9e 37       	cpi	r25, 0x7E	; 126
 274:	e8 f0       	brcs	.+58     	; 0x2b0 <round+0x44>
 276:	96 39       	cpi	r25, 0x96	; 150
 278:	b8 f4       	brcc	.+46     	; 0x2a8 <round+0x3c>
 27a:	9e 38       	cpi	r25, 0x8E	; 142
 27c:	48 f4       	brcc	.+18     	; 0x290 <round+0x24>
 27e:	67 2f       	mov	r22, r23
 280:	78 2f       	mov	r23, r24
 282:	88 27       	eor	r24, r24
 284:	98 5f       	subi	r25, 0xF8	; 248
 286:	f9 cf       	rjmp	.-14     	; 0x27a <round+0xe>
 288:	86 95       	lsr	r24
 28a:	77 95       	ror	r23
 28c:	67 95       	ror	r22
 28e:	93 95       	inc	r25
 290:	95 39       	cpi	r25, 0x95	; 149
 292:	d0 f3       	brcs	.-12     	; 0x288 <round+0x1c>
 294:	b6 2f       	mov	r27, r22
 296:	b1 70       	andi	r27, 0x01	; 1
 298:	6b 0f       	add	r22, r27
 29a:	71 1d       	adc	r23, r1
 29c:	81 1d       	adc	r24, r1
 29e:	20 f4       	brcc	.+8      	; 0x2a8 <round+0x3c>
 2a0:	87 95       	ror	r24
 2a2:	77 95       	ror	r23
 2a4:	67 95       	ror	r22
 2a6:	93 95       	inc	r25
 2a8:	0c 94 60 01 	jmp	0x2c0	; 0x2c0 <__fp_mintl>
 2ac:	0c 94 7b 01 	jmp	0x2f6	; 0x2f6 <__fp_mpack>
 2b0:	0c 94 c3 00 	jmp	0x186	; 0x186 <__fp_szero>

000002b4 <__fp_inf>:
 2b4:	97 f9       	bld	r25, 7
 2b6:	9f 67       	ori	r25, 0x7F	; 127
 2b8:	80 e8       	ldi	r24, 0x80	; 128
 2ba:	70 e0       	ldi	r23, 0x00	; 0
 2bc:	60 e0       	ldi	r22, 0x00	; 0
 2be:	08 95       	ret

000002c0 <__fp_mintl>:
 2c0:	88 23       	and	r24, r24
 2c2:	71 f4       	brne	.+28     	; 0x2e0 <__fp_mintl+0x20>
 2c4:	77 23       	and	r23, r23
 2c6:	21 f0       	breq	.+8      	; 0x2d0 <__fp_mintl+0x10>
 2c8:	98 50       	subi	r25, 0x08	; 8
 2ca:	87 2b       	or	r24, r23
 2cc:	76 2f       	mov	r23, r22
 2ce:	07 c0       	rjmp	.+14     	; 0x2de <__fp_mintl+0x1e>
 2d0:	66 23       	and	r22, r22
 2d2:	11 f4       	brne	.+4      	; 0x2d8 <__fp_mintl+0x18>
 2d4:	99 27       	eor	r25, r25
 2d6:	0d c0       	rjmp	.+26     	; 0x2f2 <__fp_mintl+0x32>
 2d8:	90 51       	subi	r25, 0x10	; 16
 2da:	86 2b       	or	r24, r22
 2dc:	70 e0       	ldi	r23, 0x00	; 0
 2de:	60 e0       	ldi	r22, 0x00	; 0
 2e0:	2a f0       	brmi	.+10     	; 0x2ec <__fp_mintl+0x2c>
 2e2:	9a 95       	dec	r25
 2e4:	66 0f       	add	r22, r22
 2e6:	77 1f       	adc	r23, r23
 2e8:	88 1f       	adc	r24, r24
 2ea:	da f7       	brpl	.-10     	; 0x2e2 <__fp_mintl+0x22>
 2ec:	88 0f       	add	r24, r24
 2ee:	96 95       	lsr	r25
 2f0:	87 95       	ror	r24
 2f2:	97 f9       	bld	r25, 7
 2f4:	08 95       	ret

000002f6 <__fp_mpack>:
 2f6:	9f 3f       	cpi	r25, 0xFF	; 255
 2f8:	31 f0       	breq	.+12     	; 0x306 <__fp_mpack_finite+0xc>

000002fa <__fp_mpack_finite>:
 2fa:	91 50       	subi	r25, 0x01	; 1
 2fc:	20 f4       	brcc	.+8      	; 0x306 <__fp_mpack_finite+0xc>
 2fe:	87 95       	ror	r24
 300:	77 95       	ror	r23
 302:	67 95       	ror	r22
 304:	b7 95       	ror	r27
 306:	88 0f       	add	r24, r24
 308:	91 1d       	adc	r25, r1
 30a:	96 95       	lsr	r25
 30c:	87 95       	ror	r24
 30e:	97 f9       	bld	r25, 7
 310:	08 95       	ret

00000312 <__fp_nan>:
 312:	9f ef       	ldi	r25, 0xFF	; 255
 314:	80 ec       	ldi	r24, 0xC0	; 192
 316:	08 95       	ret

00000318 <__fp_pscA>:
 318:	00 24       	eor	r0, r0
 31a:	0a 94       	dec	r0
 31c:	16 16       	cp	r1, r22
 31e:	17 06       	cpc	r1, r23
 320:	18 06       	cpc	r1, r24
 322:	09 06       	cpc	r0, r25
 324:	08 95       	ret

00000326 <__fp_pscB>:
 326:	00 24       	eor	r0, r0
 328:	0a 94       	dec	r0
 32a:	12 16       	cp	r1, r18
 32c:	13 06       	cpc	r1, r19
 32e:	14 06       	cpc	r1, r20
 330:	05 06       	cpc	r0, r21
 332:	08 95       	ret

00000334 <__fp_round>:
 334:	09 2e       	mov	r0, r25
 336:	03 94       	inc	r0
 338:	00 0c       	add	r0, r0
 33a:	11 f4       	brne	.+4      	; 0x340 <__fp_round+0xc>
 33c:	88 23       	and	r24, r24
 33e:	52 f0       	brmi	.+20     	; 0x354 <__fp_round+0x20>
 340:	bb 0f       	add	r27, r27
 342:	40 f4       	brcc	.+16     	; 0x354 <__fp_round+0x20>
 344:	bf 2b       	or	r27, r31
 346:	11 f4       	brne	.+4      	; 0x34c <__fp_round+0x18>
 348:	60 ff       	sbrs	r22, 0
 34a:	04 c0       	rjmp	.+8      	; 0x354 <__fp_round+0x20>
 34c:	6f 5f       	subi	r22, 0xFF	; 255
 34e:	7f 4f       	sbci	r23, 0xFF	; 255
 350:	8f 4f       	sbci	r24, 0xFF	; 255
 352:	9f 4f       	sbci	r25, 0xFF	; 255
 354:	08 95       	ret

00000356 <_exit>:
 356:	f8 94       	cli

00000358 <__stop_program>:
 358:	ff cf       	rjmp	.-2      	; 0x358 <__stop_program>
