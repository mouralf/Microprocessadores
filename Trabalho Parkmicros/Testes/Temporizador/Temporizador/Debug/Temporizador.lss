
Temporizador.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004e0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000048c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004e0  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000510  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000f0  00000000  00000000  00000550  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000011d8  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000878  00000000  00000000  00001818  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000965  00000000  00000000  00002090  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002cc  00000000  00000000  000029f8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000005ac  00000000  00000000  00002cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000c10  00000000  00000000  00003270  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f8  00000000  00000000  00003e80  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e8       	ldi	r30, 0x8C	; 140
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a0 30       	cpi	r26, 0x00	; 0
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 04 01 	call	0x208	; 0x208 <main>
  8e:	0c 94 44 02 	jmp	0x488	; 0x488 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <delay_ms>:
		}
		if(comparaString(str, aux))				//compara as duas placas
		return 2;							//retorna 2 se for caso especial, ex. idoso
	}
	return 1;									//retorna 1 se a placa for válida
}
  96:	cf 93       	push	r28
  98:	c2 e0       	ldi	r28, 0x02	; 2
  9a:	c4 bd       	out	0x24, r28	; 36
  9c:	25 e0       	ldi	r18, 0x05	; 5
  9e:	25 bd       	out	0x25, r18	; 37
  a0:	16 bc       	out	0x26, r1	; 38
  a2:	20 e0       	ldi	r18, 0x00	; 0
  a4:	30 e0       	ldi	r19, 0x00	; 0
  a6:	40 e8       	ldi	r20, 0x80	; 128
  a8:	5c e3       	ldi	r21, 0x3C	; 60
  aa:	0e 94 8a 01 	call	0x314	; 0x314 <__mulsf3>
  ae:	20 e0       	ldi	r18, 0x00	; 0
  b0:	30 e0       	ldi	r19, 0x00	; 0
  b2:	4a e7       	ldi	r20, 0x7A	; 122
  b4:	54 e4       	ldi	r21, 0x44	; 68
  b6:	0e 94 8a 01 	call	0x314	; 0x314 <__mulsf3>
  ba:	0e 94 f7 01 	call	0x3ee	; 0x3ee <round>
  be:	0e 94 0a 01 	call	0x214	; 0x214 <__fixunssfsi>
  c2:	67 bd       	out	0x27, r22	; 39
  c4:	c5 bb       	out	0x15, r28	; 21
  c6:	a9 9b       	sbis	0x15, 1	; 21
  c8:	fe cf       	rjmp	.-4      	; 0xc6 <delay_ms+0x30>
  ca:	cf 91       	pop	r28
  cc:	08 95       	ret

000000ce <LCD_control>:
  ce:	cf 93       	push	r28
  d0:	c8 2f       	mov	r28, r24
  d2:	61 30       	cpi	r22, 0x01	; 1
  d4:	21 f4       	brne	.+8      	; 0xde <LCD_control+0x10>
  d6:	85 b1       	in	r24, 0x05	; 5
  d8:	81 60       	ori	r24, 0x01	; 1
  da:	85 b9       	out	0x05, r24	; 5
  dc:	05 c0       	rjmp	.+10     	; 0xe8 <LCD_control+0x1a>
  de:	61 11       	cpse	r22, r1
  e0:	03 c0       	rjmp	.+6      	; 0xe8 <LCD_control+0x1a>
  e2:	85 b1       	in	r24, 0x05	; 5
  e4:	8e 7f       	andi	r24, 0xFE	; 254
  e6:	85 b9       	out	0x05, r24	; 5
  e8:	8b b1       	in	r24, 0x0b	; 11
  ea:	8f 70       	andi	r24, 0x0F	; 15
  ec:	8b b9       	out	0x0b, r24	; 11
  ee:	8b b1       	in	r24, 0x0b	; 11
  f0:	9c 2f       	mov	r25, r28
  f2:	90 7f       	andi	r25, 0xF0	; 240
  f4:	89 2b       	or	r24, r25
  f6:	8b b9       	out	0x0b, r24	; 11
  f8:	85 b1       	in	r24, 0x05	; 5
  fa:	82 60       	ori	r24, 0x02	; 2
  fc:	85 b9       	out	0x05, r24	; 5
  fe:	85 b1       	in	r24, 0x05	; 5
 100:	8d 7f       	andi	r24, 0xFD	; 253
 102:	85 b9       	out	0x05, r24	; 5
 104:	60 e0       	ldi	r22, 0x00	; 0
 106:	70 e0       	ldi	r23, 0x00	; 0
 108:	80 e2       	ldi	r24, 0x20	; 32
 10a:	91 e4       	ldi	r25, 0x41	; 65
 10c:	0e 94 4b 00 	call	0x96	; 0x96 <delay_ms>
 110:	8b b1       	in	r24, 0x0b	; 11
 112:	8f 70       	andi	r24, 0x0F	; 15
 114:	8b b9       	out	0x0b, r24	; 11
 116:	8b b1       	in	r24, 0x0b	; 11
 118:	c2 95       	swap	r28
 11a:	c0 7f       	andi	r28, 0xF0	; 240
 11c:	c8 2b       	or	r28, r24
 11e:	cb b9       	out	0x0b, r28	; 11
 120:	85 b1       	in	r24, 0x05	; 5
 122:	82 60       	ori	r24, 0x02	; 2
 124:	85 b9       	out	0x05, r24	; 5
 126:	85 b1       	in	r24, 0x05	; 5
 128:	8d 7f       	andi	r24, 0xFD	; 253
 12a:	85 b9       	out	0x05, r24	; 5
 12c:	60 e0       	ldi	r22, 0x00	; 0
 12e:	70 e0       	ldi	r23, 0x00	; 0
 130:	80 e2       	ldi	r24, 0x20	; 32
 132:	91 e4       	ldi	r25, 0x41	; 65
 134:	0e 94 4b 00 	call	0x96	; 0x96 <delay_ms>
 138:	cf 91       	pop	r28
 13a:	08 95       	ret

0000013c <LCD_init>:
 13c:	83 e0       	ldi	r24, 0x03	; 3
 13e:	84 b9       	out	0x04, r24	; 4
 140:	80 ef       	ldi	r24, 0xF0	; 240
 142:	8a b9       	out	0x0a, r24	; 10
 144:	60 e0       	ldi	r22, 0x00	; 0
 146:	70 e0       	ldi	r23, 0x00	; 0
 148:	80 e2       	ldi	r24, 0x20	; 32
 14a:	91 e4       	ldi	r25, 0x41	; 65
 14c:	0e 94 4b 00 	call	0x96	; 0x96 <delay_ms>
 150:	84 b1       	in	r24, 0x04	; 4
 152:	83 60       	ori	r24, 0x03	; 3
 154:	84 b9       	out	0x04, r24	; 4
 156:	8a b1       	in	r24, 0x0a	; 10
 158:	80 6f       	ori	r24, 0xF0	; 240
 15a:	8a b9       	out	0x0a, r24	; 10
 15c:	60 e0       	ldi	r22, 0x00	; 0
 15e:	70 e0       	ldi	r23, 0x00	; 0
 160:	80 ea       	ldi	r24, 0xA0	; 160
 162:	91 e4       	ldi	r25, 0x41	; 65
 164:	0e 94 4b 00 	call	0x96	; 0x96 <delay_ms>
 168:	60 e0       	ldi	r22, 0x00	; 0
 16a:	82 e0       	ldi	r24, 0x02	; 2
 16c:	0e 94 67 00 	call	0xce	; 0xce <LCD_control>
 170:	60 e0       	ldi	r22, 0x00	; 0
 172:	88 e2       	ldi	r24, 0x28	; 40
 174:	0e 94 67 00 	call	0xce	; 0xce <LCD_control>
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	8c e0       	ldi	r24, 0x0C	; 12
 17c:	0e 94 67 00 	call	0xce	; 0xce <LCD_control>
 180:	60 e0       	ldi	r22, 0x00	; 0
 182:	86 e0       	ldi	r24, 0x06	; 6
 184:	0e 94 67 00 	call	0xce	; 0xce <LCD_control>
 188:	60 e0       	ldi	r22, 0x00	; 0
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	0e 94 67 00 	call	0xce	; 0xce <LCD_control>
 190:	60 e0       	ldi	r22, 0x00	; 0
 192:	80 e8       	ldi	r24, 0x80	; 128
 194:	0e 94 67 00 	call	0xce	; 0xce <LCD_control>
 198:	60 e0       	ldi	r22, 0x00	; 0
 19a:	70 e0       	ldi	r23, 0x00	; 0
 19c:	80 e2       	ldi	r24, 0x20	; 32
 19e:	91 e4       	ldi	r25, 0x41	; 65
 1a0:	0e 94 4b 00 	call	0x96	; 0x96 <delay_ms>
 1a4:	08 95       	ret

000001a6 <enviaChar>:
 1a6:	61 e0       	ldi	r22, 0x01	; 1
 1a8:	0e 94 67 00 	call	0xce	; 0xce <LCD_control>
 1ac:	08 95       	ret

000001ae <Keyboard_config>:
 1ae:	8a b1       	in	r24, 0x0a	; 10
 1b0:	81 60       	ori	r24, 0x01	; 1
 1b2:	8a b9       	out	0x0a, r24	; 10
 1b4:	8a b1       	in	r24, 0x0a	; 10
 1b6:	82 60       	ori	r24, 0x02	; 2
 1b8:	8a b9       	out	0x0a, r24	; 10
 1ba:	8a b1       	in	r24, 0x0a	; 10
 1bc:	84 60       	ori	r24, 0x04	; 4
 1be:	8a b9       	out	0x0a, r24	; 10
 1c0:	8a b1       	in	r24, 0x0a	; 10
 1c2:	88 60       	ori	r24, 0x08	; 8
 1c4:	8a b9       	out	0x0a, r24	; 10
 1c6:	87 b1       	in	r24, 0x07	; 7
 1c8:	8d 7f       	andi	r24, 0xFD	; 253
 1ca:	87 b9       	out	0x07, r24	; 7
 1cc:	87 b1       	in	r24, 0x07	; 7
 1ce:	8b 7f       	andi	r24, 0xFB	; 251
 1d0:	87 b9       	out	0x07, r24	; 7
 1d2:	87 b1       	in	r24, 0x07	; 7
 1d4:	87 7f       	andi	r24, 0xF7	; 247
 1d6:	87 b9       	out	0x07, r24	; 7
 1d8:	88 b1       	in	r24, 0x08	; 8
 1da:	82 60       	ori	r24, 0x02	; 2
 1dc:	88 b9       	out	0x08, r24	; 8
 1de:	88 b1       	in	r24, 0x08	; 8
 1e0:	84 60       	ori	r24, 0x04	; 4
 1e2:	88 b9       	out	0x08, r24	; 8
 1e4:	88 b1       	in	r24, 0x08	; 8
 1e6:	88 60       	ori	r24, 0x08	; 8
 1e8:	88 b9       	out	0x08, r24	; 8
 1ea:	08 95       	ret

000001ec <Buttons_config>:
 1ec:	84 b1       	in	r24, 0x04	; 4
 1ee:	87 7f       	andi	r24, 0xF7	; 247
 1f0:	84 b9       	out	0x04, r24	; 4
 1f2:	84 b1       	in	r24, 0x04	; 4
 1f4:	8f 7e       	andi	r24, 0xEF	; 239
 1f6:	84 b9       	out	0x04, r24	; 4
 1f8:	08 95       	ret

000001fa <PartsConfig>:


// ------------------------------- Funções de inicialização ou configurações gerais
void PartsConfig(){
	//função responsável por configurar os periféricos e garantir a inicialização correta e de uma forma rápida
	LCD_init();
 1fa:	0e 94 9e 00 	call	0x13c	; 0x13c <LCD_init>
	Keyboard_config();
 1fe:	0e 94 d7 00 	call	0x1ae	; 0x1ae <Keyboard_config>
	Buttons_config();
 202:	0e 94 f6 00 	call	0x1ec	; 0x1ec <Buttons_config>
 206:	08 95       	ret

00000208 <main>:
#include <avr/io.h>


int main(void)
{
	PartsConfig();
 208:	0e 94 fd 00 	call	0x1fa	; 0x1fa <PartsConfig>
	enviaChar('a');
 20c:	81 e6       	ldi	r24, 0x61	; 97
 20e:	0e 94 d3 00 	call	0x1a6	; 0x1a6 <enviaChar>
 212:	ff cf       	rjmp	.-2      	; 0x212 <main+0xa>

00000214 <__fixunssfsi>:
 214:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__fp_splitA>
 218:	88 f0       	brcs	.+34     	; 0x23c <__fixunssfsi+0x28>
 21a:	9f 57       	subi	r25, 0x7F	; 127
 21c:	98 f0       	brcs	.+38     	; 0x244 <__fixunssfsi+0x30>
 21e:	b9 2f       	mov	r27, r25
 220:	99 27       	eor	r25, r25
 222:	b7 51       	subi	r27, 0x17	; 23
 224:	b0 f0       	brcs	.+44     	; 0x252 <__fixunssfsi+0x3e>
 226:	e1 f0       	breq	.+56     	; 0x260 <__fixunssfsi+0x4c>
 228:	66 0f       	add	r22, r22
 22a:	77 1f       	adc	r23, r23
 22c:	88 1f       	adc	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	1a f0       	brmi	.+6      	; 0x238 <__fixunssfsi+0x24>
 232:	ba 95       	dec	r27
 234:	c9 f7       	brne	.-14     	; 0x228 <__fixunssfsi+0x14>
 236:	14 c0       	rjmp	.+40     	; 0x260 <__fixunssfsi+0x4c>
 238:	b1 30       	cpi	r27, 0x01	; 1
 23a:	91 f0       	breq	.+36     	; 0x260 <__fixunssfsi+0x4c>
 23c:	0e 94 83 01 	call	0x306	; 0x306 <__fp_zero>
 240:	b1 e0       	ldi	r27, 0x01	; 1
 242:	08 95       	ret
 244:	0c 94 83 01 	jmp	0x306	; 0x306 <__fp_zero>
 248:	67 2f       	mov	r22, r23
 24a:	78 2f       	mov	r23, r24
 24c:	88 27       	eor	r24, r24
 24e:	b8 5f       	subi	r27, 0xF8	; 248
 250:	39 f0       	breq	.+14     	; 0x260 <__fixunssfsi+0x4c>
 252:	b9 3f       	cpi	r27, 0xF9	; 249
 254:	cc f3       	brlt	.-14     	; 0x248 <__fixunssfsi+0x34>
 256:	86 95       	lsr	r24
 258:	77 95       	ror	r23
 25a:	67 95       	ror	r22
 25c:	b3 95       	inc	r27
 25e:	d9 f7       	brne	.-10     	; 0x256 <__fixunssfsi+0x42>
 260:	3e f4       	brtc	.+14     	; 0x270 <__fixunssfsi+0x5c>
 262:	90 95       	com	r25
 264:	80 95       	com	r24
 266:	70 95       	com	r23
 268:	61 95       	neg	r22
 26a:	7f 4f       	sbci	r23, 0xFF	; 255
 26c:	8f 4f       	sbci	r24, 0xFF	; 255
 26e:	9f 4f       	sbci	r25, 0xFF	; 255
 270:	08 95       	ret

00000272 <__fp_inf>:
 272:	97 f9       	bld	r25, 7
 274:	9f 67       	ori	r25, 0x7F	; 127
 276:	80 e8       	ldi	r24, 0x80	; 128
 278:	70 e0       	ldi	r23, 0x00	; 0
 27a:	60 e0       	ldi	r22, 0x00	; 0
 27c:	08 95       	ret

0000027e <__fp_nan>:
 27e:	9f ef       	ldi	r25, 0xFF	; 255
 280:	80 ec       	ldi	r24, 0xC0	; 192
 282:	08 95       	ret

00000284 <__fp_pscA>:
 284:	00 24       	eor	r0, r0
 286:	0a 94       	dec	r0
 288:	16 16       	cp	r1, r22
 28a:	17 06       	cpc	r1, r23
 28c:	18 06       	cpc	r1, r24
 28e:	09 06       	cpc	r0, r25
 290:	08 95       	ret

00000292 <__fp_pscB>:
 292:	00 24       	eor	r0, r0
 294:	0a 94       	dec	r0
 296:	12 16       	cp	r1, r18
 298:	13 06       	cpc	r1, r19
 29a:	14 06       	cpc	r1, r20
 29c:	05 06       	cpc	r0, r21
 29e:	08 95       	ret

000002a0 <__fp_round>:
 2a0:	09 2e       	mov	r0, r25
 2a2:	03 94       	inc	r0
 2a4:	00 0c       	add	r0, r0
 2a6:	11 f4       	brne	.+4      	; 0x2ac <__fp_round+0xc>
 2a8:	88 23       	and	r24, r24
 2aa:	52 f0       	brmi	.+20     	; 0x2c0 <__fp_round+0x20>
 2ac:	bb 0f       	add	r27, r27
 2ae:	40 f4       	brcc	.+16     	; 0x2c0 <__fp_round+0x20>
 2b0:	bf 2b       	or	r27, r31
 2b2:	11 f4       	brne	.+4      	; 0x2b8 <__fp_round+0x18>
 2b4:	60 ff       	sbrs	r22, 0
 2b6:	04 c0       	rjmp	.+8      	; 0x2c0 <__fp_round+0x20>
 2b8:	6f 5f       	subi	r22, 0xFF	; 255
 2ba:	7f 4f       	sbci	r23, 0xFF	; 255
 2bc:	8f 4f       	sbci	r24, 0xFF	; 255
 2be:	9f 4f       	sbci	r25, 0xFF	; 255
 2c0:	08 95       	ret

000002c2 <__fp_split3>:
 2c2:	57 fd       	sbrc	r21, 7
 2c4:	90 58       	subi	r25, 0x80	; 128
 2c6:	44 0f       	add	r20, r20
 2c8:	55 1f       	adc	r21, r21
 2ca:	59 f0       	breq	.+22     	; 0x2e2 <__fp_splitA+0x10>
 2cc:	5f 3f       	cpi	r21, 0xFF	; 255
 2ce:	71 f0       	breq	.+28     	; 0x2ec <__fp_splitA+0x1a>
 2d0:	47 95       	ror	r20

000002d2 <__fp_splitA>:
 2d2:	88 0f       	add	r24, r24
 2d4:	97 fb       	bst	r25, 7
 2d6:	99 1f       	adc	r25, r25
 2d8:	61 f0       	breq	.+24     	; 0x2f2 <__fp_splitA+0x20>
 2da:	9f 3f       	cpi	r25, 0xFF	; 255
 2dc:	79 f0       	breq	.+30     	; 0x2fc <__fp_splitA+0x2a>
 2de:	87 95       	ror	r24
 2e0:	08 95       	ret
 2e2:	12 16       	cp	r1, r18
 2e4:	13 06       	cpc	r1, r19
 2e6:	14 06       	cpc	r1, r20
 2e8:	55 1f       	adc	r21, r21
 2ea:	f2 cf       	rjmp	.-28     	; 0x2d0 <__fp_split3+0xe>
 2ec:	46 95       	lsr	r20
 2ee:	f1 df       	rcall	.-30     	; 0x2d2 <__fp_splitA>
 2f0:	08 c0       	rjmp	.+16     	; 0x302 <__fp_splitA+0x30>
 2f2:	16 16       	cp	r1, r22
 2f4:	17 06       	cpc	r1, r23
 2f6:	18 06       	cpc	r1, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	f1 cf       	rjmp	.-30     	; 0x2de <__fp_splitA+0xc>
 2fc:	86 95       	lsr	r24
 2fe:	71 05       	cpc	r23, r1
 300:	61 05       	cpc	r22, r1
 302:	08 94       	sec
 304:	08 95       	ret

00000306 <__fp_zero>:
 306:	e8 94       	clt

00000308 <__fp_szero>:
 308:	bb 27       	eor	r27, r27
 30a:	66 27       	eor	r22, r22
 30c:	77 27       	eor	r23, r23
 30e:	cb 01       	movw	r24, r22
 310:	97 f9       	bld	r25, 7
 312:	08 95       	ret

00000314 <__mulsf3>:
 314:	0e 94 9d 01 	call	0x33a	; 0x33a <__mulsf3x>
 318:	0c 94 50 01 	jmp	0x2a0	; 0x2a0 <__fp_round>
 31c:	0e 94 42 01 	call	0x284	; 0x284 <__fp_pscA>
 320:	38 f0       	brcs	.+14     	; 0x330 <__mulsf3+0x1c>
 322:	0e 94 49 01 	call	0x292	; 0x292 <__fp_pscB>
 326:	20 f0       	brcs	.+8      	; 0x330 <__mulsf3+0x1c>
 328:	95 23       	and	r25, r21
 32a:	11 f0       	breq	.+4      	; 0x330 <__mulsf3+0x1c>
 32c:	0c 94 39 01 	jmp	0x272	; 0x272 <__fp_inf>
 330:	0c 94 3f 01 	jmp	0x27e	; 0x27e <__fp_nan>
 334:	11 24       	eor	r1, r1
 336:	0c 94 84 01 	jmp	0x308	; 0x308 <__fp_szero>

0000033a <__mulsf3x>:
 33a:	0e 94 61 01 	call	0x2c2	; 0x2c2 <__fp_split3>
 33e:	70 f3       	brcs	.-36     	; 0x31c <__mulsf3+0x8>

00000340 <__mulsf3_pse>:
 340:	95 9f       	mul	r25, r21
 342:	c1 f3       	breq	.-16     	; 0x334 <__mulsf3+0x20>
 344:	95 0f       	add	r25, r21
 346:	50 e0       	ldi	r21, 0x00	; 0
 348:	55 1f       	adc	r21, r21
 34a:	62 9f       	mul	r22, r18
 34c:	f0 01       	movw	r30, r0
 34e:	72 9f       	mul	r23, r18
 350:	bb 27       	eor	r27, r27
 352:	f0 0d       	add	r31, r0
 354:	b1 1d       	adc	r27, r1
 356:	63 9f       	mul	r22, r19
 358:	aa 27       	eor	r26, r26
 35a:	f0 0d       	add	r31, r0
 35c:	b1 1d       	adc	r27, r1
 35e:	aa 1f       	adc	r26, r26
 360:	64 9f       	mul	r22, r20
 362:	66 27       	eor	r22, r22
 364:	b0 0d       	add	r27, r0
 366:	a1 1d       	adc	r26, r1
 368:	66 1f       	adc	r22, r22
 36a:	82 9f       	mul	r24, r18
 36c:	22 27       	eor	r18, r18
 36e:	b0 0d       	add	r27, r0
 370:	a1 1d       	adc	r26, r1
 372:	62 1f       	adc	r22, r18
 374:	73 9f       	mul	r23, r19
 376:	b0 0d       	add	r27, r0
 378:	a1 1d       	adc	r26, r1
 37a:	62 1f       	adc	r22, r18
 37c:	83 9f       	mul	r24, r19
 37e:	a0 0d       	add	r26, r0
 380:	61 1d       	adc	r22, r1
 382:	22 1f       	adc	r18, r18
 384:	74 9f       	mul	r23, r20
 386:	33 27       	eor	r19, r19
 388:	a0 0d       	add	r26, r0
 38a:	61 1d       	adc	r22, r1
 38c:	23 1f       	adc	r18, r19
 38e:	84 9f       	mul	r24, r20
 390:	60 0d       	add	r22, r0
 392:	21 1d       	adc	r18, r1
 394:	82 2f       	mov	r24, r18
 396:	76 2f       	mov	r23, r22
 398:	6a 2f       	mov	r22, r26
 39a:	11 24       	eor	r1, r1
 39c:	9f 57       	subi	r25, 0x7F	; 127
 39e:	50 40       	sbci	r21, 0x00	; 0
 3a0:	9a f0       	brmi	.+38     	; 0x3c8 <__mulsf3_pse+0x88>
 3a2:	f1 f0       	breq	.+60     	; 0x3e0 <__mulsf3_pse+0xa0>
 3a4:	88 23       	and	r24, r24
 3a6:	4a f0       	brmi	.+18     	; 0x3ba <__mulsf3_pse+0x7a>
 3a8:	ee 0f       	add	r30, r30
 3aa:	ff 1f       	adc	r31, r31
 3ac:	bb 1f       	adc	r27, r27
 3ae:	66 1f       	adc	r22, r22
 3b0:	77 1f       	adc	r23, r23
 3b2:	88 1f       	adc	r24, r24
 3b4:	91 50       	subi	r25, 0x01	; 1
 3b6:	50 40       	sbci	r21, 0x00	; 0
 3b8:	a9 f7       	brne	.-22     	; 0x3a4 <__mulsf3_pse+0x64>
 3ba:	9e 3f       	cpi	r25, 0xFE	; 254
 3bc:	51 05       	cpc	r21, r1
 3be:	80 f0       	brcs	.+32     	; 0x3e0 <__mulsf3_pse+0xa0>
 3c0:	0c 94 39 01 	jmp	0x272	; 0x272 <__fp_inf>
 3c4:	0c 94 84 01 	jmp	0x308	; 0x308 <__fp_szero>
 3c8:	5f 3f       	cpi	r21, 0xFF	; 255
 3ca:	e4 f3       	brlt	.-8      	; 0x3c4 <__mulsf3_pse+0x84>
 3cc:	98 3e       	cpi	r25, 0xE8	; 232
 3ce:	d4 f3       	brlt	.-12     	; 0x3c4 <__mulsf3_pse+0x84>
 3d0:	86 95       	lsr	r24
 3d2:	77 95       	ror	r23
 3d4:	67 95       	ror	r22
 3d6:	b7 95       	ror	r27
 3d8:	f7 95       	ror	r31
 3da:	e7 95       	ror	r30
 3dc:	9f 5f       	subi	r25, 0xFF	; 255
 3de:	c1 f7       	brne	.-16     	; 0x3d0 <__mulsf3_pse+0x90>
 3e0:	fe 2b       	or	r31, r30
 3e2:	88 0f       	add	r24, r24
 3e4:	91 1d       	adc	r25, r1
 3e6:	96 95       	lsr	r25
 3e8:	87 95       	ror	r24
 3ea:	97 f9       	bld	r25, 7
 3ec:	08 95       	ret

000003ee <round>:
 3ee:	0e 94 69 01 	call	0x2d2	; 0x2d2 <__fp_splitA>
 3f2:	e8 f0       	brcs	.+58     	; 0x42e <__EEPROM_REGION_LENGTH__+0x2e>
 3f4:	9e 37       	cpi	r25, 0x7E	; 126
 3f6:	e8 f0       	brcs	.+58     	; 0x432 <__EEPROM_REGION_LENGTH__+0x32>
 3f8:	96 39       	cpi	r25, 0x96	; 150
 3fa:	b8 f4       	brcc	.+46     	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 3fc:	9e 38       	cpi	r25, 0x8E	; 142
 3fe:	48 f4       	brcc	.+18     	; 0x412 <__EEPROM_REGION_LENGTH__+0x12>
 400:	67 2f       	mov	r22, r23
 402:	78 2f       	mov	r23, r24
 404:	88 27       	eor	r24, r24
 406:	98 5f       	subi	r25, 0xF8	; 248
 408:	f9 cf       	rjmp	.-14     	; 0x3fc <round+0xe>
 40a:	86 95       	lsr	r24
 40c:	77 95       	ror	r23
 40e:	67 95       	ror	r22
 410:	93 95       	inc	r25
 412:	95 39       	cpi	r25, 0x95	; 149
 414:	d0 f3       	brcs	.-12     	; 0x40a <__EEPROM_REGION_LENGTH__+0xa>
 416:	b6 2f       	mov	r27, r22
 418:	b1 70       	andi	r27, 0x01	; 1
 41a:	6b 0f       	add	r22, r27
 41c:	71 1d       	adc	r23, r1
 41e:	81 1d       	adc	r24, r1
 420:	20 f4       	brcc	.+8      	; 0x42a <__EEPROM_REGION_LENGTH__+0x2a>
 422:	87 95       	ror	r24
 424:	77 95       	ror	r23
 426:	67 95       	ror	r22
 428:	93 95       	inc	r25
 42a:	0c 94 1b 02 	jmp	0x436	; 0x436 <__fp_mintl>
 42e:	0c 94 36 02 	jmp	0x46c	; 0x46c <__fp_mpack>
 432:	0c 94 84 01 	jmp	0x308	; 0x308 <__fp_szero>

00000436 <__fp_mintl>:
 436:	88 23       	and	r24, r24
 438:	71 f4       	brne	.+28     	; 0x456 <__fp_mintl+0x20>
 43a:	77 23       	and	r23, r23
 43c:	21 f0       	breq	.+8      	; 0x446 <__fp_mintl+0x10>
 43e:	98 50       	subi	r25, 0x08	; 8
 440:	87 2b       	or	r24, r23
 442:	76 2f       	mov	r23, r22
 444:	07 c0       	rjmp	.+14     	; 0x454 <__fp_mintl+0x1e>
 446:	66 23       	and	r22, r22
 448:	11 f4       	brne	.+4      	; 0x44e <__fp_mintl+0x18>
 44a:	99 27       	eor	r25, r25
 44c:	0d c0       	rjmp	.+26     	; 0x468 <__fp_mintl+0x32>
 44e:	90 51       	subi	r25, 0x10	; 16
 450:	86 2b       	or	r24, r22
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	2a f0       	brmi	.+10     	; 0x462 <__fp_mintl+0x2c>
 458:	9a 95       	dec	r25
 45a:	66 0f       	add	r22, r22
 45c:	77 1f       	adc	r23, r23
 45e:	88 1f       	adc	r24, r24
 460:	da f7       	brpl	.-10     	; 0x458 <__fp_mintl+0x22>
 462:	88 0f       	add	r24, r24
 464:	96 95       	lsr	r25
 466:	87 95       	ror	r24
 468:	97 f9       	bld	r25, 7
 46a:	08 95       	ret

0000046c <__fp_mpack>:
 46c:	9f 3f       	cpi	r25, 0xFF	; 255
 46e:	31 f0       	breq	.+12     	; 0x47c <__fp_mpack_finite+0xc>

00000470 <__fp_mpack_finite>:
 470:	91 50       	subi	r25, 0x01	; 1
 472:	20 f4       	brcc	.+8      	; 0x47c <__fp_mpack_finite+0xc>
 474:	87 95       	ror	r24
 476:	77 95       	ror	r23
 478:	67 95       	ror	r22
 47a:	b7 95       	ror	r27
 47c:	88 0f       	add	r24, r24
 47e:	91 1d       	adc	r25, r1
 480:	96 95       	lsr	r25
 482:	87 95       	ror	r24
 484:	97 f9       	bld	r25, 7
 486:	08 95       	ret

00000488 <_exit>:
 488:	f8 94       	cli

0000048a <__stop_program>:
 48a:	ff cf       	rjmp	.-2      	; 0x48a <__stop_program>
